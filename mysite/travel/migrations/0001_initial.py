# Generated by Django 5.2.3 on 2025-06-22 10:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_score', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('created_date', models.DateField(auto_now_add=True)),
                ('photo1', models.ImageField(upload_to='review_photos/')),
                ('photo2', models.ImageField(upload_to='review_photos/')),
                ('photo3', models.ImageField(upload_to='review_photos/')),
                ('text', models.TextField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.abstractreview')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=64, unique=True)),
                ('city_name_en', models.CharField(max_length=64, null=True, unique=True)),
                ('city_name_ky', models.CharField(max_length=64, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=64, unique=True)),
                ('country_name_en', models.CharField(max_length=64, null=True, unique=True)),
                ('country_name_ky', models.CharField(max_length=64, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CultureVariety',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('culture_variety_name', models.CharField(max_length=64, unique=True)),
                ('culture_variety_name_en', models.CharField(max_length=64, null=True, unique=True)),
                ('culture_variety_name_ky', models.CharField(max_length=64, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(max_length=64, unique=True)),
                ('event_type_en', models.CharField(max_length=64, null=True, unique=True)),
                ('event_type_ky', models.CharField(max_length=64, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MealTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_time', models.CharField(max_length=32, unique=True)),
                ('meal_time_en', models.CharField(max_length=32, null=True, unique=True)),
                ('meal_time_ky', models.CharField(max_length=32, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MealType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_type', models.CharField(max_length=32, unique=True)),
                ('meal_type_en', models.CharField(max_length=32, null=True, unique=True)),
                ('meal_type_ky', models.CharField(max_length=32, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_name', models.CharField(max_length=64, unique=True)),
                ('place_name_en', models.CharField(max_length=64, null=True, unique=True)),
                ('place_name_ky', models.CharField(max_length=64, null=True, unique=True)),
                ('place_image', models.ImageField(upload_to='place_images/')),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_ky', models.TextField(null=True)),
                ('temperature', models.PositiveSmallIntegerField(choices=[])),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_name', models.CharField(max_length=32, unique=True)),
                ('region_name_en', models.CharField(max_length=32, null=True, unique=True)),
                ('region_name_ky', models.CharField(max_length=32, null=True, unique=True)),
                ('region_image', models.ImageField(upload_to='region_images/')),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_ky', models.TextField(null=True)),
                ('temperature', models.PositiveSmallIntegerField(blank=True, choices=[(-50, '-50'), (-49, '-49'), (-48, '-48'), (-47, '-47'), (-46, '-46'), (-45, '-45'), (-44, '-44'), (-43, '-43'), (-42, '-42'), (-41, '-41'), (-40, '-40'), (-39, '-39'), (-38, '-38'), (-37, '-37'), (-36, '-36'), (-35, '-35'), (-34, '-34'), (-33, '-33'), (-32, '-32'), (-31, '-31'), (-30, '-30'), (-29, '-29'), (-28, '-28'), (-27, '-27'), (-26, '-26'), (-25, '-25'), (-24, '-24'), (-23, '-23'), (-22, '-22'), (-21, '-21'), (-20, '-20'), (-19, '-19'), (-18, '-18'), (-17, '-17'), (-16, '-16'), (-15, '-15'), (-14, '-14'), (-13, '-13'), (-12, '-12'), (-11, '-11'), (-10, '-10'), (-9, '-9'), (-8, '-8'), (-7, '-7'), (-6, '-6'), (-5, '-5'), (-4, '-4'), (-3, '-3'), (-2, '-2'), (-1, '-1'), (0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, '23'), (24, '24'), (25, '25'), (26, '26'), (27, '27'), (28, '28'), (29, '29'), (30, '30'), (31, '31'), (32, '32'), (33, '33'), (34, '34'), (35, '35'), (36, '36'), (37, '37'), (38, '38'), (39, '39'), (40, '40'), (41, '41'), (42, '42'), (43, '43'), (44, '44'), (45, '45'), (46, '46'), (47, '47'), (48, '48'), (49, '49')], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SpecializedMenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialized_menu', models.CharField(max_length=64, unique=True)),
                ('specialized_menu_en', models.CharField(max_length=64, null=True, unique=True)),
                ('specialized_menu_ky', models.CharField(max_length=64, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Attraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, unique=True)),
                ('title_en', models.CharField(max_length=128, null=True, unique=True)),
                ('title_ky', models.CharField(max_length=128, null=True, unique=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_ky', models.TextField(null=True)),
                ('low_price', models.PositiveSmallIntegerField()),
                ('high_price', models.PositiveSmallIntegerField()),
                ('image1', models.ImageField(upload_to='attraction_images/')),
                ('image2', models.ImageField(upload_to='attraction_images/')),
                ('image3', models.ImageField(upload_to='attraction_images/')),
                ('image4', models.ImageField(upload_to='attraction_images/')),
                ('country', models.ManyToManyField(to='travel.country')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.place')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_photo', models.ImageField(upload_to='profile_photos/')),
                ('banner', models.ImageField(upload_to='banner_photo/')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.country')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Culture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('culture_name', models.CharField(max_length=64, unique=True)),
                ('culture_name_en', models.CharField(max_length=64, null=True, unique=True)),
                ('culture_name_ky', models.CharField(max_length=64, null=True, unique=True)),
                ('image', models.ImageField(upload_to='culture_images/')),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_ky', models.TextField(null=True)),
                ('culture_variety', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.culturevariety')),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_name', models.CharField(max_length=64)),
                ('hotel_name_en', models.CharField(max_length=64, null=True)),
                ('hotel_name_ky', models.CharField(max_length=64, null=True)),
                ('low_price', models.PositiveSmallIntegerField()),
                ('high_price', models.PositiveSmallIntegerField()),
                ('bedrooms', models.PositiveSmallIntegerField(default=0)),
                ('bathrooms', models.PositiveSmallIntegerField(default=0)),
                ('cars', models.PositiveSmallIntegerField(default=0)),
                ('bikes', models.PositiveSmallIntegerField(default=0)),
                ('pets', models.PositiveSmallIntegerField(default=0)),
                ('address', models.CharField(max_length=128, unique=True)),
                ('address_en', models.CharField(max_length=128, null=True, unique=True)),
                ('address_ky', models.CharField(max_length=128, null=True, unique=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_ky', models.TextField(null=True)),
                ('kitchen', models.BooleanField(default=False)),
                ('air', models.BooleanField(default=False)),
                ('washer', models.BooleanField(default=False)),
                ('tv', models.BooleanField(default=False)),
                ('wifi', models.BooleanField(default=False)),
                ('balcony', models.BooleanField(default=False)),
                ('parking', models.BooleanField(default=False)),
                ('hair_dryer', models.BooleanField(default=False)),
                ('towel', models.BooleanField(default=False)),
                ('iron', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.place')),
            ],
        ),
        migrations.CreateModel(
            name='HotelContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_contact', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.hotel')),
            ],
        ),
        migrations.CreateModel(
            name='HotelHygiene',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hygiene_title', models.CharField(max_length=64, unique=True)),
                ('hygiene_title_en', models.CharField(max_length=64, null=True, unique=True)),
                ('hygiene_title_ky', models.CharField(max_length=64, null=True, unique=True)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.hotel')),
            ],
        ),
        migrations.CreateModel(
            name='HotelImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_image', models.ImageField(upload_to='hotel_images/')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.hotel')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64)),
                ('title_en', models.CharField(max_length=64, null=True)),
                ('title_ky', models.CharField(max_length=64, null=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_ky', models.TextField(null=True)),
                ('date', models.DateField()),
                ('ticket', models.BooleanField(default=True)),
                ('address', models.CharField(max_length=128)),
                ('address_en', models.CharField(max_length=128, null=True)),
                ('address_ky', models.CharField(max_length=128, null=True)),
                ('event_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.eventtype')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.place')),
            ],
        ),
        migrations.AddField(
            model_name='place',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.region'),
        ),
        migrations.CreateModel(
            name='RegionMeal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_name', models.CharField(max_length=32, unique=True)),
                ('meal_name_en', models.CharField(max_length=32, null=True, unique=True)),
                ('meal_name_ky', models.CharField(max_length=32, null=True, unique=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_ky', models.TextField(null=True)),
                ('meal_image1', models.ImageField(upload_to='meal_images/')),
                ('meal_image2', models.ImageField(upload_to='meal_images/')),
                ('meal_image3', models.ImageField(upload_to='meal_images/')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.region')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant_name', models.CharField(max_length=64)),
                ('restaurant_name_en', models.CharField(max_length=64, null=True)),
                ('restaurant_name_ky', models.CharField(max_length=64, null=True)),
                ('low_price', models.PositiveSmallIntegerField()),
                ('high_price', models.PositiveSmallIntegerField()),
                ('address', models.CharField(max_length=128, unique=True)),
                ('address_en', models.CharField(max_length=128, null=True, unique=True)),
                ('address_ky', models.CharField(max_length=128, null=True, unique=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('meal_time', models.ManyToManyField(to='travel.mealtime')),
                ('meal_type', models.ManyToManyField(to='travel.mealtype')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.place')),
                ('specialized_menu', models.ManyToManyField(to='travel.specializedmenu')),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant_image', models.ImageField(upload_to='restaurant_images/')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewAttraction',
            fields=[
                ('abstractreview_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='travel.abstractreview')),
                ('attraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.attraction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=('travel.abstractreview',),
        ),
        migrations.CreateModel(
            name='ReviewHotel',
            fields=[
                ('abstractreview_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='travel.abstractreview')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.hotel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=('travel.abstractreview',),
        ),
        migrations.CreateModel(
            name='ReviewPlace',
            fields=[
                ('abstractreview_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='travel.abstractreview')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.place')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=('travel.abstractreview',),
        ),
        migrations.CreateModel(
            name='ReviewRestaurant',
            fields=[
                ('abstractreview_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='travel.abstractreview')),
                ('nutrition_score', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('price_score', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('atmosphere_score', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.restaurant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=('travel.abstractreview',),
        ),
        migrations.CreateModel(
            name='FavoriteAttraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('attraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.attraction')),
                ('favorite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.favorite')),
            ],
            options={
                'unique_together': {('attraction', 'favorite')},
            },
        ),
        migrations.CreateModel(
            name='FavoriteHotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('favorite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.favorite')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.hotel')),
            ],
            options={
                'unique_together': {('hotel', 'favorite')},
            },
        ),
        migrations.CreateModel(
            name='FavoritePlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('favorite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.favorite')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.place')),
            ],
            options={
                'unique_together': {('place', 'favorite')},
            },
        ),
        migrations.CreateModel(
            name='FavoriteRestaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('favorite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.favorite')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.restaurant')),
            ],
            options={
                'unique_together': {('restaurant', 'favorite')},
            },
        ),
        migrations.CreateModel(
            name='ReviewAttractionLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('attraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.reviewattraction')),
            ],
            options={
                'unique_together': {('attraction', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ReviewHotelLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('review_hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.reviewhotel')),
            ],
            options={
                'unique_together': {('review_hotel', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ReviewPlaceLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('review_place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.reviewplace')),
            ],
            options={
                'unique_together': {('review_place', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ReviewRestaurantLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.reviewrestaurant')),
            ],
            options={
                'unique_together': {('restaurant', 'user')},
            },
        ),
    ]
